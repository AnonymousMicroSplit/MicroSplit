apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.109.75/32
    creationTimestamp: "2020-07-03T05:03:54Z"
    generateName: adservice-5bdd84b98d-
    labels:
      app: adservice
      pod-template-hash: 5bdd84b98d
    name: adservice-5bdd84b98d-bgflr
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: adservice-5bdd84b98d
      uid: 1ce0b59b-2f8c-46d7-8e0f-dd7f432df348
    resourceVersion: "3954234"
    selfLink: /api/v1/namespaces/default/pods/adservice-5bdd84b98d-bgflr
    uid: 3504be76-8f28-4c91-ae26-1c51e8c5c8ce
  spec:
    containers:
    - env:
      - name: PORT
        value: "9555"
      - name: DISABLE_STATS
        value: "1"
      - name: DISABLE_TRACING
        value: "1"
      image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:9555
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 9555
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:9555
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 300Mi
        requests:
          cpu: 200m
          memory: 180Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-1
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T05:03:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T05:04:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T05:04:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T05:03:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ac54f91661c4c78b9c4d4a97d1061e2de6f5eee06bb1e015682ad8070af7de06
      image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/adservice@sha256:0acf0911298988295c0a9848fe1e588a1a92a5e1e16da62c76eb802ceac79d9b
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-07-03T05:04:04Z"
    hostIP: 192.168.50.11
    phase: Running
    podIP: 192.168.109.75
    qosClass: Burstable
    startTime: "2020-07-03T05:03:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.109.74/32
    creationTimestamp: "2020-06-23T08:15:47Z"
    generateName: cartservice-7666c7449b-
    labels:
      app: cartservice
      pod-template-hash: 7666c7449b
    name: cartservice-7666c7449b-2qt2s
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cartservice-7666c7449b
      uid: 2dbe56c3-fb4b-45d5-b183-12f9d636d704
    resourceVersion: "4395444"
    selfLink: /api/v1/namespaces/default/pods/cartservice-7666c7449b-2qt2s
    uid: 2b0826de-5d2b-4b53-86a5-eb0b0b67e9ec
  spec:
    containers:
    - env:
      - name: REDIS_ADDR
        value: redis-cart:6379
      - name: PORT
        value: "7070"
      - name: LISTEN_ADDR
        value: 0.0.0.0
      image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:7070
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 7070
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:7070
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-1
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-06-23T08:15:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-07-05T03:02:21Z"
      message: 'containers with unready status: [server]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-07-05T03:02:21Z"
      message: 'containers with unready status: [server]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-06-23T08:15:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bd60ad23495c14a8eea1b1ca7cc3678f67cd877b7c95ebe8654a5c957be18586
      image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/cartservice@sha256:b4998eceb0d863559ce4356085704a86e67281cc4ab9907f4410e9608956d918
      lastState:
        terminated:
          containerID: docker://bd60ad23495c14a8eea1b1ca7cc3678f67cd877b7c95ebe8654a5c957be18586
          exitCode: 0
          finishedAt: "2020-07-06T08:20:48Z"
          reason: Completed
          startedAt: "2020-07-06T08:20:22Z"
      name: server
      ready: false
      restartCount: 472
      state:
        waiting:
          message: Back-off 5m0s restarting failed container=server pod=cartservice-7666c7449b-2qt2s_default(2b0826de-5d2b-4b53-86a5-eb0b0b67e9ec)
          reason: CrashLoopBackOff
    hostIP: 192.168.50.11
    phase: Running
    podIP: 192.168.109.74
    qosClass: Burstable
    startTime: "2020-06-23T08:15:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.140.113/32
    creationTimestamp: "2020-06-12T10:13:43Z"
    generateName: checkoutservice-d84456bd-
    labels:
      app: checkoutservice
      pod-template-hash: d84456bd
    name: checkoutservice-d84456bd-vsnrq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: checkoutservice-d84456bd
      uid: 8e97e289-6a46-4105-ac34-a4a4241247e5
    resourceVersion: "1089502"
    selfLink: /api/v1/namespaces/default/pods/checkoutservice-d84456bd-vsnrq
    uid: fdef698b-0208-4a5b-84dd-f67d8b0dc0d7
  spec:
    containers:
    - env:
      - name: PORT
        value: "5050"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: productcatalogservice:3550
      - name: SHIPPING_SERVICE_ADDR
        value: shippingservice:50051
      - name: PAYMENT_SERVICE_ADDR
        value: paymentservice:50051
      - name: EMAIL_SERVICE_ADDR
        value: emailservice:5000
      - name: CURRENCY_SERVICE_ADDR
        value: currencyservice:7000
      - name: CART_SERVICE_ADDR
        value: cartservice:7070
      - name: DISABLE_STATS
        value: "1"
      - name: DISABLE_TRACING
        value: "1"
      - name: DISABLE_PROFILER
        value: "1"
      image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:5050
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 5050
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:5050
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://05db5432ca3b5f32cb311c7f8bdad324b4e889a4c79fb77e7787431d4df809d5
      image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/checkoutservice@sha256:25a60eb74b56f9689813f1ed9a5f88ac86d34b394f70999d2ed14eb1b49828bc
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-06-12T10:13:45Z"
    hostIP: 192.168.50.12
    phase: Running
    podIP: 192.168.140.113
    qosClass: Burstable
    startTime: "2020-06-12T10:13:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.76.137/32
    creationTimestamp: "2020-07-06T08:20:08Z"
    generateName: currencyservice-65b9b8d946-
    labels:
      app: currencyservice
      pod-template-hash: 65b9b8d946
    name: currencyservice-65b9b8d946-56zrc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: currencyservice-65b9b8d946
      uid: 71dfbf93-2116-4fd3-8553-e70d28d11bbb
    resourceVersion: "4395386"
    selfLink: /api/v1/namespaces/default/pods/currencyservice-65b9b8d946-56zrc
    uid: de13209f-9681-4db1-a94a-d9d6c5266893
  spec:
    containers:
    - env:
      - name: PORT
        value: "7000"
      - name: DISABLE_TRACING
        value: "1"
      - name: DISABLE_PROFILER
        value: "1"
      - name: DISABLE_DEBUGGER
        value: "1"
      image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:7000
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 7000
        name: grpc
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:7000
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-3
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-07-06T08:20:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-07-06T08:20:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-07-06T08:20:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-07-06T08:20:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://de74f3cb215595de60fc0d8352d9f8bbbc8e90b934af06c027eb940bcd11345a
      image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/currencyservice@sha256:72c7140118ba313901220ae09f90faeddc928d7aa2c2dfa583b4e04f77eaa81f
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-07-06T08:20:14Z"
    hostIP: 192.168.50.13
    phase: Running
    podIP: 192.168.76.137
    qosClass: Burstable
    startTime: "2020-07-06T08:20:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.76.143/32
    creationTimestamp: "2020-06-22T21:00:37Z"
    generateName: emailservice-869db54846-
    labels:
      app: emailservice
      pod-template-hash: 869db54846
    name: emailservice-869db54846-bjp4q
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: emailservice-869db54846
      uid: c99661b2-0d28-45e6-9432-c793b031f48f
    resourceVersion: "2521816"
    selfLink: /api/v1/namespaces/default/pods/emailservice-869db54846-bjp4q
    uid: 70ceb465-6828-43d0-9fd9-185f4ad222e5
  spec:
    containers:
    - env:
      - name: PORT
        value: "8080"
      - name: DISABLE_TRACING
        value: "1"
      - name: DISABLE_PROFILER
        value: "1"
      image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:8080
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:8080
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-3
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-06-22T21:00:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-06-22T21:00:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-06-22T21:00:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-06-22T21:00:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b51eb7490a1a3a0422c5c7b99b076957730cfe249d0fd01b5cd34d5191b5b1b4
      image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/emailservice@sha256:a97a936918dcbfd72c1f19b796539832cd3a3ca233e7f4aafea315d19ccb7b5d
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-06-22T21:00:49Z"
    hostIP: 192.168.50.13
    phase: Running
    podIP: 192.168.76.143
    qosClass: Burstable
    startTime: "2020-06-22T21:00:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.140.73/32
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
    creationTimestamp: "2020-07-04T14:47:47Z"
    generateName: frontend-7ff699486f-
    labels:
      app: frontend
      pod-template-hash: 7ff699486f
    name: frontend-7ff699486f-vs6sc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-7ff699486f
      uid: 6ac2a0f5-8e1b-42c5-ad91-13615fa25ec3
    resourceVersion: "4150941"
    selfLink: /api/v1/namespaces/default/pods/frontend-7ff699486f-vs6sc
    uid: 2a68ad8a-080b-4a50-943f-e8f5a4d10b23
  spec:
    containers:
    - env:
      - name: PORT
        value: "8080"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: productcatalogservice:3550
      - name: CURRENCY_SERVICE_ADDR
        value: currencyservice:7000
      - name: CART_SERVICE_ADDR
        value: cartservice:7070
      - name: RECOMMENDATION_SERVICE_ADDR
        value: recommendationservice:8080
      - name: SHIPPING_SERVICE_ADDR
        value: shippingservice:50051
      - name: CHECKOUT_SERVICE_ADDR
        value: checkoutservice:5050
      - name: AD_SERVICE_ADDR
        value: adservice:9555
      - name: ENV_PLATFORM
        value: local
      - name: DISABLE_TRACING
        value: "1"
      - name: DISABLE_PROFILER
        value: "1"
      image: gcr.io/google-samples/microservices-demo/frontend:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
          - name: Cookie
            value: shop_session-id=x-liveness-probe
          path: /_healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
          - name: Cookie
            value: shop_session-id=x-readiness-probe
          path: /_healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-07-04T14:47:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-07-04T14:48:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-07-04T14:48:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-07-04T14:47:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://accb4bd9f6140500cf2fafe9044bf3f82dcd5ababa7f21108cb80e15d423e122
      image: gcr.io/google-samples/microservices-demo/frontend:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/frontend@sha256:574b28cddab734ae2fccd8f6bf6cdc7c7f4516450e041c5fb9d921b365f6f17b
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-07-04T14:47:51Z"
    hostIP: 192.168.50.12
    phase: Running
    podIP: 192.168.140.73
    qosClass: Burstable
    startTime: "2020-07-04T14:47:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.140.78/32
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
    creationTimestamp: "2020-07-03T13:33:27Z"
    generateName: loadgenerator-8bcc5fd79-
    labels:
      app: loadgenerator
      pod-template-hash: 8bcc5fd79
    name: loadgenerator-8bcc5fd79-pq5n9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: loadgenerator-8bcc5fd79
      uid: 078bfd38-190c-407a-8c7d-8aae70361b7b
    resourceVersion: "4003582"
    selfLink: /api/v1/namespaces/default/pods/loadgenerator-8bcc5fd79-pq5n9
    uid: ed394c52-29fe-477e-934f-b72eeb9d4648
  spec:
    containers:
    - env:
      - name: FRONTEND_ADDR
        value: frontend:80
      - name: USERS
        value: "10"
      image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.0
      imagePullPolicy: IfNotPresent
      name: main
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 300m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T13:33:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T13:33:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T13:33:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-07-03T13:33:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6daa34c8135a5abc426c96dc3740fa327984c41cff33636b7b4dc7465dbf0d77
      image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/loadgenerator@sha256:284ff6329cca9a622dc72004072a456b88ac664cdfc5bbd03287ae34d4864ae0
      lastState: {}
      name: main
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-07-03T13:33:38Z"
    hostIP: 192.168.50.12
    phase: Running
    podIP: 192.168.140.78
    qosClass: Burstable
    startTime: "2020-07-03T13:33:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.76.179/32
    creationTimestamp: "2020-06-12T10:13:44Z"
    generateName: paymentservice-849c76b5c-
    labels:
      app: paymentservice
      pod-template-hash: 849c76b5c
    name: paymentservice-849c76b5c-5vrvf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: paymentservice-849c76b5c
      uid: 4eb7495a-18ed-4566-91e6-5e003fd6df36
    resourceVersion: "1089550"
    selfLink: /api/v1/namespaces/default/pods/paymentservice-849c76b5c-5vrvf
    uid: ff144224-178d-4a76-ac07-6e3692683ecb
  spec:
    containers:
    - env:
      - name: PORT
        value: "50051"
      image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:50051
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 50051
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:50051
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-3
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b82a6ba6e1d7ab30e5fd7e529f796941bfdd3758df78f95032de7b6db865801a
      image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/paymentservice@sha256:dd479813beae1e80e92362470430c77c82227528c4b6a3b7f013f8043a36c269
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-06-12T10:13:45Z"
    hostIP: 192.168.50.13
    phase: Running
    podIP: 192.168.76.179
    qosClass: Burstable
    startTime: "2020-06-12T10:13:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.109.118/32
    creationTimestamp: "2020-06-12T10:13:44Z"
    generateName: productcatalogservice-6c5f4649c8-
    labels:
      app: productcatalogservice
      pod-template-hash: 6c5f4649c8
    name: productcatalogservice-6c5f4649c8-fv5s2
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: productcatalogservice-6c5f4649c8
      uid: 38312ba6-b2b3-4107-93f8-8fa231a78849
    resourceVersion: "1089521"
    selfLink: /api/v1/namespaces/default/pods/productcatalogservice-6c5f4649c8-fv5s2
    uid: 17287fa3-9962-47cf-97bc-7add87304b9d
  spec:
    containers:
    - env:
      - name: PORT
        value: "3550"
      - name: DISABLE_STATS
        value: "1"
      - name: DISABLE_TRACING
        value: "1"
      - name: DISABLE_PROFILER
        value: "1"
      image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:3550
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 3550
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:3550
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-1
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9dbdd8d4d10fbc52c6282b4e1b0ae0558e99a86e356a3531e2ee787bf0679e7c
      image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/productcatalogservice@sha256:1726e4dd813190ad1eae7f3c42483a3a83dd1676832bb7b04256455c8968d82a
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-06-12T10:13:46Z"
    hostIP: 192.168.50.11
    phase: Running
    podIP: 192.168.109.118
    qosClass: Burstable
    startTime: "2020-06-12T10:13:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.76.133/32
    creationTimestamp: "2020-07-02T23:31:03Z"
    generateName: recommendationservice-67c48886d8-
    labels:
      app: recommendationservice
      pod-template-hash: 67c48886d8
    name: recommendationservice-67c48886d8-4nvs8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: recommendationservice-67c48886d8
      uid: f8b86b3e-711d-4a57-b2d1-311f36dbe595
    resourceVersion: "3921875"
    selfLink: /api/v1/namespaces/default/pods/recommendationservice-67c48886d8-4nvs8
    uid: 3b75b938-f2d3-42b2-a005-d098a45fd821
  spec:
    containers:
    - env:
      - name: PORT
        value: "8080"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: productcatalogservice:3550
      - name: DISABLE_TRACING
        value: "1"
      - name: DISABLE_PROFILER
        value: "1"
      image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:8080
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:8080
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 450Mi
        requests:
          cpu: 100m
          memory: 220Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-3
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-07-02T23:31:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-07-02T23:31:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-07-02T23:31:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-07-02T23:31:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ba1cc9d2f4d38c7dfd612f513b51775c9439777b8200a375688e95c5e29be720
      image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/recommendationservice@sha256:08b6143a9ac4aeb7899c810ec8cb204072751d32c9f710f2936f258a7e426ae6
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-07-02T23:31:16Z"
    hostIP: 192.168.50.13
    phase: Running
    podIP: 192.168.76.133
    qosClass: Burstable
    startTime: "2020-07-02T23:31:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.140.118/32
    creationTimestamp: "2020-06-12T10:13:45Z"
    generateName: redis-cart-66f5677976-
    labels:
      app: redis-cart
      pod-template-hash: 66f5677976
    name: redis-cart-66f5677976-2wwgp
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-cart-66f5677976
      uid: 216293cb-238f-4cf9-8316-a85ae099b701
    resourceVersion: "1089453"
    selfLink: /api/v1/namespaces/default/pods/redis-cart-66f5677976-2wwgp
    uid: 30b75051-ae3f-4588-abde-e0ccededd5e8
  spec:
    containers:
    - image: redis:alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 6379
        timeoutSeconds: 1
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 6379
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 125m
          memory: 256Mi
        requests:
          cpu: 70m
          memory: 200Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-2
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: redis-data
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-06-12T10:13:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://47e18dd32e459fb0e8509975f4fe1e1265fa8036c1c958486ddc52329d823b4c
      image: redis:alpine
      imageID: docker-pullable://redis@sha256:43524b12420e141ff08e05d44a4278d1d4e6c26f538cc7309515d32be21c07bf
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-06-12T10:13:47Z"
    hostIP: 192.168.50.12
    phase: Running
    podIP: 192.168.140.118
    qosClass: Burstable
    startTime: "2020-06-12T10:13:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 192.168.76.140/32
    creationTimestamp: "2020-06-24T02:25:59Z"
    generateName: shippingservice-7dcb845f6b-
    labels:
      app: shippingservice
      pod-template-hash: 7dcb845f6b
    name: shippingservice-7dcb845f6b-tvzk8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: shippingservice-7dcb845f6b
      uid: 17a162ea-1d8c-40c7-bd47-36c05bac7fab
    resourceVersion: "2690681"
    selfLink: /api/v1/namespaces/default/pods/shippingservice-7dcb845f6b-tvzk8
    uid: 276e3ec6-c466-4f78-b72d-de66d12ba669
  spec:
    containers:
    - env:
      - name: PORT
        value: "50051"
      - name: DISABLE_STATS
        value: "1"
      - name: DISABLE_TRACING
        value: "1"
      - name: DISABLE_PROFILER
        value: "1"
      image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:50051
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 50051
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/grpc_health_probe
          - -addr=:50051
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dvzn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-3
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dvzn4
      secret:
        defaultMode: 420
        secretName: default-token-dvzn4
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-06-24T02:25:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-06-24T02:26:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-06-24T02:26:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-06-24T02:25:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f22ec812d9f204ec51989a584a93c66572987b5cc7d54f6fa563ec0932cdd600
      image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
      imageID: docker-pullable://gcr.io/google-samples/microservices-demo/shippingservice@sha256:7d2dcc6867b7797cc2b282a1e0ed450f68be0ff36b63b7800d32378b093cefac
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2020-06-24T02:26:03Z"
    hostIP: 192.168.50.13
    phase: Running
    podIP: 192.168.76.140
    qosClass: Burstable
    startTime: "2020-06-24T02:25:59Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"adservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":9555,"targetPort":9555}],"selector":{"app":"adservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: adservice
    namespace: default
    resourceVersion: "20100"
    selfLink: /api/v1/namespaces/default/services/adservice
    uid: 6aec89ad-b811-4520-93c0-db4f35a85e6d
  spec:
    clusterIP: 10.109.96.10
    ports:
    - name: grpc
      port: 9555
      protocol: TCP
      targetPort: 9555
    selector:
      app: adservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"cartservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":7070,"targetPort":7070}],"selector":{"app":"cartservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: cartservice
    namespace: default
    resourceVersion: "20066"
    selfLink: /api/v1/namespaces/default/services/cartservice
    uid: 4cb04301-3483-47e3-aad5-2e4ca6a45b31
  spec:
    clusterIP: 10.104.221.200
    ports:
    - name: grpc
      port: 7070
      protocol: TCP
      targetPort: 7070
    selector:
      app: cartservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"checkoutservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":5050,"targetPort":5050}],"selector":{"app":"checkoutservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:42Z"
    name: checkoutservice
    namespace: default
    resourceVersion: "19985"
    selfLink: /api/v1/namespaces/default/services/checkoutservice
    uid: 8151f7ac-7e01-4e2c-9ade-27da432ac9e4
  spec:
    clusterIP: 10.104.244.193
    ports:
    - name: grpc
      port: 5050
      protocol: TCP
      targetPort: 5050
    selector:
      app: checkoutservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"currencyservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":7000,"targetPort":7000}],"selector":{"app":"currencyservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: currencyservice
    namespace: default
    resourceVersion: "20079"
    selfLink: /api/v1/namespaces/default/services/currencyservice
    uid: 566bb8e1-3bd1-48e4-bd54-ba269366e8a1
  spec:
    clusterIP: 10.103.141.4
    ports:
    - name: grpc
      port: 7000
      protocol: TCP
      targetPort: 7000
    selector:
      app: currencyservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"emailservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":5000,"targetPort":8080}],"selector":{"app":"emailservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:42Z"
    name: emailservice
    namespace: default
    resourceVersion: "19972"
    selfLink: /api/v1/namespaces/default/services/emailservice
    uid: 33f5ea78-e80a-4656-a72b-537b1a38aa43
  spec:
    clusterIP: 10.104.166.9
    ports:
    - name: grpc
      port: 5000
      protocol: TCP
      targetPort: 8080
    selector:
      app: emailservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"frontend","namespace":"default"},"spec":{"ports":[{"name":"http","port":80,"targetPort":8080}],"selector":{"app":"frontend"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: frontend
    namespace: default
    resourceVersion: "20014"
    selfLink: /api/v1/namespaces/default/services/frontend
    uid: d5a6ef88-27fd-4908-838d-6627d6ce6fc4
  spec:
    clusterIP: 10.102.243.173
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"frontend-external","namespace":"default"},"spec":{"ports":[{"name":"http","port":80,"targetPort":8080}],"selector":{"app":"frontend"},"type":"LoadBalancer"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: frontend-external
    namespace: default
    resourceVersion: "20025"
    selfLink: /api/v1/namespaces/default/services/frontend-external
    uid: d529f885-5377-4b7d-81fb-b19fc957da19
  spec:
    clusterIP: 10.102.25.138
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 32039
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-06-04T13:06:56Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "19781"
    selfLink: /api/v1/namespaces/default/services/kubernetes
    uid: bf6c58da-9410-4159-a823-d87b0609a3fc
  spec:
    clusterIP: 10.96.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"paymentservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":50051,"targetPort":50051}],"selector":{"app":"paymentservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: paymentservice
    namespace: default
    resourceVersion: "20037"
    selfLink: /api/v1/namespaces/default/services/paymentservice
    uid: 2d267f84-cfe2-444f-a8f0-f3f9f103749c
  spec:
    clusterIP: 10.104.8.252
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: paymentservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"productcatalogservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":3550,"targetPort":3550}],"selector":{"app":"productcatalogservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: productcatalogservice
    namespace: default
    resourceVersion: "20055"
    selfLink: /api/v1/namespaces/default/services/productcatalogservice
    uid: 56d6f41a-c7ce-4c2c-b78e-87526622e86f
  spec:
    clusterIP: 10.109.47.123
    ports:
    - name: grpc
      port: 3550
      protocol: TCP
      targetPort: 3550
    selector:
      app: productcatalogservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"recommendationservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":8080,"targetPort":8080}],"selector":{"app":"recommendationservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: recommendationservice
    namespace: default
    resourceVersion: "19998"
    selfLink: /api/v1/namespaces/default/services/recommendationservice
    uid: 3ab124e8-db13-40e0-8870-08515af68a18
  spec:
    clusterIP: 10.107.192.12
    ports:
    - name: grpc
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: recommendationservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"redis-cart","namespace":"default"},"spec":{"ports":[{"name":"redis","port":6379,"targetPort":6379}],"selector":{"app":"redis-cart"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: redis-cart
    namespace: default
    resourceVersion: "20095"
    selfLink: /api/v1/namespaces/default/services/redis-cart
    uid: b0cd0817-7edd-4c21-bbd6-ed3e05bc31fe
  spec:
    clusterIP: 10.101.127.59
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis-cart
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"shippingservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":50051,"targetPort":50051}],"selector":{"app":"shippingservice"},"type":"ClusterIP"}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    name: shippingservice
    namespace: default
    resourceVersion: "20091"
    selfLink: /api/v1/namespaces/default/services/shippingservice
    uid: 7ed9eb31-2e63-40c7-86e6-05be57cb7be8
  spec:
    clusterIP: 10.106.33.208
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: shippingservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"adservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"adservice"}},"template":{"metadata":{"labels":{"app":"adservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"9555"},{"name":"DISABLE_STATS","value":"1"},{"name":"DISABLE_TRACING","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/adservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:9555"]},"initialDelaySeconds":20,"periodSeconds":15},"name":"server","ports":[{"containerPort":9555}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:9555"]},"initialDelaySeconds":20,"periodSeconds":15},"resources":{"limits":{"cpu":"300m","memory":"300Mi"},"requests":{"cpu":"200m","memory":"180Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}],"terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 8
    name: adservice
    namespace: default
    resourceVersion: "3954237"
    selfLink: /apis/apps/v1/namespaces/default/deployments/adservice
    uid: 486cdc3b-c5c2-4526-9088-f7b04a764b28
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: adservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:14:12Z"
      message: ReplicaSet "adservice-5bdd84b98d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-07-03T05:04:35Z"
      lastUpdateTime: "2020-07-03T05:04:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 8
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"cartservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"cartservice"}},"template":{"metadata":{"labels":{"app":"cartservice"}},"spec":{"containers":[{"env":[{"name":"REDIS_ADDR","value":"redis-cart:6379"},{"name":"PORT","value":"7070"},{"name":"LISTEN_ADDR","value":"0.0.0.0"}],"image":"gcr.io/google-samples/microservices-demo/cartservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:7070","-rpc-timeout=5s"]},"initialDelaySeconds":15,"periodSeconds":10},"name":"server","ports":[{"containerPort":7070}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:7070","-rpc-timeout=5s"]},"initialDelaySeconds":15},"resources":{"limits":{"cpu":"300m","memory":"128Mi"},"requests":{"cpu":"200m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}],"terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 8
    name: cartservice
    namespace: default
    resourceVersion: "4222523"
    selfLink: /apis/apps/v1/namespaces/default/deployments/cartservice
    uid: 8f313166-5c89-403a-9bb7-8d059dc1c86e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cartservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          - name: PORT
            value: "7070"
          - name: LISTEN_ADDR
            value: 0.0.0.0
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:14:07Z"
      message: ReplicaSet "cartservice-7666c7449b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-07-05T03:02:20Z"
      lastUpdateTime: "2020-07-05T03:02:20Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 8
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"checkoutservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"checkoutservice"}},"template":{"metadata":{"labels":{"app":"checkoutservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"5050"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"PAYMENT_SERVICE_ADDR","value":"paymentservice:50051"},{"name":"EMAIL_SERVICE_ADDR","value":"emailservice:5000"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"DISABLE_STATS","value":"1"},{"name":"DISABLE_TRACING","value":"1"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:5050"]}},"name":"server","ports":[{"containerPort":5050}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:5050"]}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}]}}}}
    creationTimestamp: "2020-06-04T13:08:42Z"
    generation: 6
    name: checkoutservice
    namespace: default
    resourceVersion: "1089516"
    selfLink: /apis/apps/v1/namespaces/default/deployments/checkoutservice
    uid: 6af1726d-04b5-4399-9fa7-6f7f59c3c89b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: checkoutservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: checkoutservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-11T15:57:29Z"
      lastUpdateTime: "2020-06-11T15:57:29Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-06-04T13:08:42Z"
      lastUpdateTime: "2020-06-12T10:13:54Z"
      message: ReplicaSet "checkoutservice-d84456bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 6
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "7"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"currencyservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"currencyservice"}},"template":{"metadata":{"labels":{"app":"currencyservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"7000"},{"name":"DISABLE_TRACING","value":"1"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"DISABLE_DEBUGGER","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:7000"]}},"name":"server","ports":[{"containerPort":7000,"name":"grpc"}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:7000"]}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}],"terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 11
    name: currencyservice
    namespace: default
    resourceVersion: "4395389"
    selfLink: /apis/apps/v1/namespaces/default/deployments/currencyservice
    uid: 199749eb-8f5a-4aac-9d54-02b7330bb5ff
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: currencyservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          - name: DISABLE_DEBUGGER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:13:53Z"
      message: ReplicaSet "currencyservice-65b9b8d946" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-07-06T08:20:25Z"
      lastUpdateTime: "2020-07-06T08:20:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 11
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "9"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"emailservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"emailservice"}},"template":{"metadata":{"labels":{"app":"emailservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"DISABLE_TRACING","value":"1"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/emailservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:8080"]},"periodSeconds":5},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:8080"]},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}],"terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-04T13:08:42Z"
    generation: 9
    name: emailservice
    namespace: default
    resourceVersion: "2521819"
    selfLink: /apis/apps/v1/namespaces/default/deployments/emailservice
    uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: emailservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:42Z"
      lastUpdateTime: "2020-06-12T10:13:51Z"
      message: ReplicaSet "emailservice-869db54846" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-22T21:00:52Z"
      lastUpdateTime: "2020-06-22T21:00:52Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 9
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "7"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"frontend","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"frontend"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"frontend"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"RECOMMENDATION_SERVICE_ADDR","value":"recommendationservice:8080"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"CHECKOUT_SERVICE_ADDR","value":"checkoutservice:5050"},{"name":"AD_SERVICE_ADDR","value":"adservice:9555"},{"name":"ENV_PLATFORM","value":"local"},{"name":"DISABLE_TRACING","value":"1"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/frontend:v0.2.0","livenessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-liveness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-readiness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}]}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 7
    name: frontend
    namespace: default
    resourceVersion: "4150945"
    selfLink: /apis/apps/v1/namespaces/default/deployments/frontend
    uid: b0bb9bc6-629b-47ed-bc32-060c6323059a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: ENV_PLATFORM
            value: local
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/frontend:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:13:58Z"
      message: ReplicaSet "frontend-7ff699486f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-07-04T14:48:09Z"
      lastUpdateTime: "2020-07-04T14:48:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"loadgenerator","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"loadgenerator"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"loadgenerator"}},"spec":{"containers":[{"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"},{"name":"USERS","value":"10"}],"image":"gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.0","name":"main","resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"300m","memory":"256Mi"}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 1
    name: loadgenerator
    namespace: default
    resourceVersion: "4003584"
    selfLink: /apis/apps/v1/namespaces/default/deployments/loadgenerator
    uid: 903909ac-e273-4c2d-86eb-dcf9ee762909
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: loadgenerator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.0
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-12T09:59:27Z"
      lastUpdateTime: "2020-06-12T09:59:38Z"
      message: ReplicaSet "loadgenerator-8bcc5fd79" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-07-03T13:33:39Z"
      lastUpdateTime: "2020-07-03T13:33:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "7"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"paymentservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"paymentservice"}},"template":{"metadata":{"labels":{"app":"paymentservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"}],"image":"gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:50051"]}},"name":"server","ports":[{"containerPort":50051}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:50051"]}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}],"terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 7
    name: paymentservice
    namespace: default
    resourceVersion: "1089562"
    selfLink: /apis/apps/v1/namespaces/default/deployments/paymentservice
    uid: f6b93164-a5dc-418a-a856-4f778ba1b668
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: paymentservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:52Z"
      lastUpdateTime: "2020-06-04T13:08:52Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:13:55Z"
      message: ReplicaSet "paymentservice-849c76b5c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "7"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"productcatalogservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"productcatalogservice"}},"template":{"metadata":{"labels":{"app":"productcatalogservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"3550"},{"name":"DISABLE_STATS","value":"1"},{"name":"DISABLE_TRACING","value":"1"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:3550"]}},"name":"server","ports":[{"containerPort":3550}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:3550"]}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}],"terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 7
    name: productcatalogservice
    namespace: default
    resourceVersion: "1089533"
    selfLink: /apis/apps/v1/namespaces/default/deployments/productcatalogservice
    uid: 5dbf478f-4362-44b0-a795-ba9d060ab6b4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: productcatalogservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:47Z"
      lastUpdateTime: "2020-06-04T13:08:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:13:54Z"
      message: ReplicaSet "productcatalogservice-6c5f4649c8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"recommendationservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"recommendationservice"}},"template":{"metadata":{"labels":{"app":"recommendationservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"DISABLE_TRACING","value":"1"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:8080"]},"periodSeconds":5},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:8080"]},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"450Mi"},"requests":{"cpu":"100m","memory":"220Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}],"terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 8
    name: recommendationservice
    namespace: default
    resourceVersion: "3921878"
    selfLink: /apis/apps/v1/namespaces/default/deployments/recommendationservice
    uid: 873c9db5-0074-4428-89fc-870c540afbf2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: recommendationservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:13:55Z"
      message: ReplicaSet "recommendationservice-67c48886d8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-07-02T23:31:22Z"
      lastUpdateTime: "2020-07-02T23:31:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 8
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"redis-cart","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"redis-cart"}},"template":{"metadata":{"labels":{"app":"redis-cart"}},"spec":{"containers":[{"image":"redis:alpine","livenessProbe":{"periodSeconds":5,"tcpSocket":{"port":6379}},"name":"redis","ports":[{"containerPort":6379}],"readinessProbe":{"periodSeconds":5,"tcpSocket":{"port":6379}},"resources":{"limits":{"cpu":"125m","memory":"256Mi"},"requests":{"cpu":"70m","memory":"200Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}},"volumeMounts":[{"mountPath":"/data","name":"redis-data"}]}],"volumes":[{"emptyDir":{},"name":"redis-data"}]}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 8
    name: redis-cart
    namespace: default
    resourceVersion: "1089465"
    selfLink: /apis/apps/v1/namespaces/default/deployments/redis-cart
    uid: 0bded350-4a28-4416-a2c2-4966235edd9c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis-cart
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:09:21Z"
      lastUpdateTime: "2020-06-04T13:09:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:13:52Z"
      message: ReplicaSet "redis-cart-66f5677976" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 8
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "8"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"shippingservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"shippingservice"}},"template":{"metadata":{"labels":{"app":"shippingservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"},{"name":"DISABLE_STATS","value":"1"},{"name":"DISABLE_TRACING","value":"1"},{"name":"DISABLE_PROFILER","value":"1"}],"image":"gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0","livenessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:50051"]}},"name":"server","ports":[{"containerPort":50051}],"readinessProbe":{"exec":{"command":["/bin/grpc_health_probe","-addr=:50051"]},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN"]}}}]}}}}
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 8
    name: shippingservice
    namespace: default
    resourceVersion: "2690684"
    selfLink: /apis/apps/v1/namespaces/default/deployments/shippingservice
    uid: 5c39f833-3a60-4adc-bba0-d1541ab0baf9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: shippingservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-06-04T13:08:43Z"
      lastUpdateTime: "2020-06-12T10:13:52Z"
      message: ReplicaSet "shippingservice-7dcb845f6b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-06-24T02:26:06Z"
      lastUpdateTime: "2020-06-24T02:26:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 8
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      deployment.kubernetes.io/revision-history: 2,4
    creationTimestamp: "2020-06-12T09:44:17Z"
    generation: 3
    labels:
      app: adservice
      pod-template-hash: 5bdd84b98d
    name: adservice-5bdd84b98d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 486cdc3b-c5c2-4526-9088-f7b04a764b28
    resourceVersion: "3954236"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/adservice-5bdd84b98d
    uid: 1ce0b59b-2f8c-46d7-8e0f-dd7f432df348
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 5bdd84b98d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 5bdd84b98d
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 6679c7c8bd
    name: adservice-6679c7c8bd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 486cdc3b-c5c2-4526-9088-f7b04a764b28
    resourceVersion: "1089673"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/adservice-6679c7c8bd
    uid: 6433ec69-7535-4959-917d-3dd2a472762f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 6679c7c8bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 6679c7c8bd
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2020-06-12T09:59:28Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 6b867fbddf
    name: adservice-6b867fbddf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 486cdc3b-c5c2-4526-9088-f7b04a764b28
    resourceVersion: "1087780"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/adservice-6b867fbddf
    uid: 6b2e7d72-456f-462d-a4fb-863464630fa8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 6b867fbddf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 6b867fbddf
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 74f99b88d
    name: adservice-74f99b88d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 486cdc3b-c5c2-4526-9088-f7b04a764b28
    resourceVersion: "1084335"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/adservice-74f99b88d
    uid: bee3a506-647d-450e-85e4-3caf632fd2e3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 74f99b88d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 74f99b88d
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 150
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 150
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:02:55Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: d74b7c764
    name: adservice-d74b7c764
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 486cdc3b-c5c2-4526-9088-f7b04a764b28
    resourceVersion: "1088929"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/adservice-d74b7c764
    uid: aa7a5dd1-285d-480c-ba94-e5fad05e657f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: d74b7c764
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: d74b7c764
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2020-06-12T09:53:54Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: f5bb9c868
    name: adservice-f5bb9c868
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 486cdc3b-c5c2-4526-9088-f7b04a764b28
    resourceVersion: "1086103"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/adservice-f5bb9c868
    uid: 49c62a5b-5bb8-4961-b3e8-5cffe6e782a9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: f5bb9c868
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: f5bb9c868
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          image: gcr.io/google-samples/microservices-demo/adservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 200
            periodSeconds: 150
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:9555
            failureThreshold: 3
            initialDelaySeconds: 200
            periodSeconds: 150
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 50
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:02:54Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 585ddb8d9b
    name: cartservice-585ddb8d9b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 8f313166-5c89-403a-9bb7-8d059dc1c86e
    resourceVersion: "1088792"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/cartservice-585ddb8d9b
    uid: bf396882-7cec-4aff-9d32-390428b6f883
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 585ddb8d9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 585ddb8d9b
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          - name: PORT
            value: "7070"
          - name: LISTEN_ADDR
            value: 0.0.0.0
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      deployment.kubernetes.io/revision-history: 2,4
    creationTimestamp: "2020-06-12T09:44:17Z"
    generation: 5
    labels:
      app: cartservice
      pod-template-hash: 7666c7449b
    name: cartservice-7666c7449b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 8f313166-5c89-403a-9bb7-8d059dc1c86e
    resourceVersion: "4222521"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/cartservice-7666c7449b
    uid: 2dbe56c3-fb4b-45d5-b183-12f9d636d704
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 7666c7449b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 7666c7449b
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          - name: PORT
            value: "7070"
          - name: LISTEN_ADDR
            value: 0.0.0.0
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 5
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 7d688f98bd
    name: cartservice-7d688f98bd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 8f313166-5c89-403a-9bb7-8d059dc1c86e
    resourceVersion: "1084310"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/cartservice-7d688f98bd
    uid: 269cae2b-b139-4d7e-99b1-18eab9ec96a5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 7d688f98bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 7d688f98bd
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          - name: PORT
            value: "7070"
          - name: LISTEN_ADDR
            value: 0.0.0.0
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 100
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 7db8c58b54
    name: cartservice-7db8c58b54
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 8f313166-5c89-403a-9bb7-8d059dc1c86e
    resourceVersion: "1087712"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/cartservice-7db8c58b54
    uid: 0090212b-6969-421d-b665-d9c92ece7ca0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 7db8c58b54
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 7db8c58b54
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          - name: PORT
            value: "7070"
          - name: LISTEN_ADDR
            value: 0.0.0.0
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 856cb4f644
    name: cartservice-856cb4f644
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 8f313166-5c89-403a-9bb7-8d059dc1c86e
    resourceVersion: "1089635"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/cartservice-856cb4f644
    uid: 69c0ad22-637c-4e7c-aaa5-1b1db10089ec
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 856cb4f644
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 856cb4f644
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          - name: PORT
            value: "7070"
          - name: LISTEN_ADDR
            value: 0.0.0.0
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2020-06-12T09:53:53Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: c579f6dd4
    name: cartservice-c579f6dd4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 8f313166-5c89-403a-9bb7-8d059dc1c86e
    resourceVersion: "1086344"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/cartservice-c579f6dd4
    uid: 01a38e77-5d9f-4260-b919-6bde8d9b30ac
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: c579f6dd4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: c579f6dd4
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          - name: PORT
            value: "7070"
          - name: LISTEN_ADDR
            value: 0.0.0.0
          image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 150
            periodSeconds: 100
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7070
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 150
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 50
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2020-06-12T10:09:03Z"
    generation: 2
    labels:
      app: checkoutservice
      pod-template-hash: 7cbb4977c8
    name: checkoutservice-7cbb4977c8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: 6af1726d-04b5-4399-9fa7-6f7f59c3c89b
    resourceVersion: "1089514"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/checkoutservice-7cbb4977c8
    uid: 3d42ec40-074b-442e-8099-f48b7422cf27
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 7cbb4977c8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 7cbb4977c8
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-06-12T09:59:26Z"
    generation: 2
    labels:
      app: checkoutservice
      pod-template-hash: 849bcddcc5
    name: checkoutservice-849bcddcc5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: 6af1726d-04b5-4399-9fa7-6f7f59c3c89b
    resourceVersion: "1087589"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/checkoutservice-849bcddcc5
    uid: 3932bb29-8595-4898-bca8-221978958eda
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 849bcddcc5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 849bcddcc5
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      deployment.kubernetes.io/revision-history: 1,3
    creationTimestamp: "2020-06-04T13:08:42Z"
    generation: 5
    labels:
      app: checkoutservice
      pod-template-hash: d84456bd
    name: checkoutservice-d84456bd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: 6af1726d-04b5-4399-9fa7-6f7f59c3c89b
    resourceVersion: "1089503"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/checkoutservice-d84456bd
    uid: 8e97e289-6a46-4105-ac34-a4a4241247e5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: d84456bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: d84456bd
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:5050
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 55db496886
    name: currencyservice-55db496886
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 199749eb-8f5a-4aac-9d54-02b7330bb5ff
    resourceVersion: "1089496"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/currencyservice-55db496886
    uid: bed265d5-6adf-4b50-b73f-5a4d06b4316e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 55db496886
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 55db496886
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          - name: DISABLE_DEBUGGER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      deployment.kubernetes.io/revision-history: 1,3,5
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 11
    labels:
      app: currencyservice
      pod-template-hash: 65b9b8d946
    name: currencyservice-65b9b8d946
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 199749eb-8f5a-4aac-9d54-02b7330bb5ff
    resourceVersion: "4395388"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/currencyservice-65b9b8d946
    uid: 71dfbf93-2116-4fd3-8553-e70d28d11bbb
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 65b9b8d946
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 65b9b8d946
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          - name: DISABLE_DEBUGGER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 11
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-06-12T09:53:54Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 6bb55c4cbb
    name: currencyservice-6bb55c4cbb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 199749eb-8f5a-4aac-9d54-02b7330bb5ff
    resourceVersion: "1086196"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/currencyservice-6bb55c4cbb
    uid: 6f0bc181-ff03-4d23-8d5a-8a0c8d9f2a06
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 6bb55c4cbb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 6bb55c4cbb
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          - name: DISABLE_DEBUGGER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 50
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 7bf5c56c
    name: currencyservice-7bf5c56c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 199749eb-8f5a-4aac-9d54-02b7330bb5ff
    resourceVersion: "1087633"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/currencyservice-7bf5c56c
    uid: 80954347-cad7-48f1-bee1-aec7794b0be2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 7bf5c56c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 7bf5c56c
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:7000
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-04T13:08:42Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 55b8985d68
    name: emailservice-55b8985d68
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
    resourceVersion: "983677"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/emailservice-55b8985d68
    uid: a6e01bb7-2c52-41f5-9a99-0ca456c3530c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 55b8985d68
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 55b8985d68
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2020-06-12T10:09:03Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 6497cf6b78
    name: emailservice-6497cf6b78
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
    resourceVersion: "1089450"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/emailservice-6497cf6b78
    uid: b553331d-f1a2-4bb5-9f4c-d784f79ee7d7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 6497cf6b78
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 6497cf6b78
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2020-06-12T10:02:53Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 655746b97b
    name: emailservice-655746b97b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
    resourceVersion: "1088394"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/emailservice-655746b97b
    uid: a6e0aa13-dce3-41bb-ab63-254a600b5e9d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 655746b97b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 655746b97b
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-06-11T15:55:31Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 669bf9c747
    name: emailservice-669bf9c747
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
    resourceVersion: "1084250"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/emailservice-669bf9c747
    uid: 357fc9a8-a264-40ba-b3ad-25a4bf5f0a05
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 669bf9c747
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 669bf9c747
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2020-06-12T09:53:53Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 795b7c4544
    name: emailservice-795b7c4544
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
    resourceVersion: "1086178"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/emailservice-795b7c4544
    uid: fa546291-1096-453c-a4c4-af873116a3e0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 795b7c4544
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 795b7c4544
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 50
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      deployment.kubernetes.io/revision-history: 3,5
    creationTimestamp: "2020-06-12T09:44:17Z"
    generation: 5
    labels:
      app: emailservice
      pod-template-hash: 869db54846
    name: emailservice-869db54846
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
    resourceVersion: "2521817"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/emailservice-869db54846
    uid: c99661b2-0d28-45e6-9432-c793b031f48f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 869db54846
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 869db54846
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T09:59:26Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: c645fb94f
    name: emailservice-c645fb94f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: e53831c0-2991-4dd7-9b9d-108cc10083b5
    resourceVersion: "1087727"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/emailservice-c645fb94f
    uid: a27f2756-dada-474f-92d0-cbfb21c0459e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: c645fb94f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: c645fb94f
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-06-12T09:53:53Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 54cd58b685
    name: frontend-54cd58b685
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: b0bb9bc6-629b-47ed-bc32-060c6323059a
    resourceVersion: "1086310"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/frontend-54cd58b685
    uid: c0bc4c81-e545-46b7-8283-dc098281916f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 54cd58b685
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 54cd58b685
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: ENV_PLATFORM
            value: local
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/frontend:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 100
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 100
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 7797c554f6
    name: frontend-7797c554f6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: b0bb9bc6-629b-47ed-bc32-060c6323059a
    resourceVersion: "1089586"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/frontend-7797c554f6
    uid: 01c79e8b-b306-441e-b84d-a90e7df60c4e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 7797c554f6
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 7797c554f6
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: ENV_PLATFORM
            value: local
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/frontend:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 799cdb5854
    name: frontend-799cdb5854
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: b0bb9bc6-629b-47ed-bc32-060c6323059a
    resourceVersion: "1087654"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/frontend-799cdb5854
    uid: eb3f74e4-9731-4e8e-95d4-c95dd50ef544
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 799cdb5854
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 799cdb5854
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: ENV_PLATFORM
            value: local
          image: gcr.io/google-samples/microservices-demo/frontend:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      deployment.kubernetes.io/revision-history: 1,3,5
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 7
    labels:
      app: frontend
      pod-template-hash: 7ff699486f
    name: frontend-7ff699486f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: b0bb9bc6-629b-47ed-bc32-060c6323059a
    resourceVersion: "4150943"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/frontend-7ff699486f
    uid: 6ac2a0f5-8e1b-42c5-ad91-13615fa25ec3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 7ff699486f
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 7ff699486f
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: ENV_PLATFORM
            value: local
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/frontend:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 1
    labels:
      app: loadgenerator
      pod-template-hash: 8bcc5fd79
    name: loadgenerator-8bcc5fd79
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: 903909ac-e273-4c2d-86eb-dcf9ee762909
    resourceVersion: "4003583"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/loadgenerator-8bcc5fd79
    uid: 078bfd38-190c-407a-8c7d-8aae70361b7b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 8bcc5fd79
    template:
      metadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 8bcc5fd79
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.0
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 54549d7c7
    name: paymentservice-54549d7c7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: f6b93164-a5dc-418a-a856-4f778ba1b668
    resourceVersion: "1089561"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/paymentservice-54549d7c7
    uid: 2e06c24a-45b7-4914-925b-7e190ec5f4ac
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 54549d7c7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 54549d7c7
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-06-12T09:53:53Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 59958dc987
    name: paymentservice-59958dc987
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: f6b93164-a5dc-418a-a856-4f778ba1b668
    resourceVersion: "1086291"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/paymentservice-59958dc987
    uid: be04a0eb-b97d-4c77-94e9-088a59aeae01
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 59958dc987
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 59958dc987
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 50
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 6bb9b8977c
    name: paymentservice-6bb9b8977c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: f6b93164-a5dc-418a-a856-4f778ba1b668
    resourceVersion: "1087620"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/paymentservice-6bb9b8977c
    uid: 7b55eb02-39ee-45b3-af97-2d6a12a76c47
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 6bb9b8977c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 6bb9b8977c
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      deployment.kubernetes.io/revision-history: 1,3,5
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 7
    labels:
      app: paymentservice
      pod-template-hash: 849c76b5c
    name: paymentservice-849c76b5c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: f6b93164-a5dc-418a-a856-4f778ba1b668
    resourceVersion: "1089551"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/paymentservice-849c76b5c
    uid: 4eb7495a-18ed-4566-91e6-5e003fd6df36
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 849c76b5c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 849c76b5c
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: productcatalogservice
      pod-template-hash: 59b7c86df8
    name: productcatalogservice-59b7c86df8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 5dbf478f-4362-44b0-a795-ba9d060ab6b4
    resourceVersion: "1089532"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/productcatalogservice-59b7c86df8
    uid: cb0779bb-33c2-4ed9-ba97-5c18508cc6e9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 59b7c86df8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 59b7c86df8
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: productcatalogservice
      pod-template-hash: 5bf4567b87
    name: productcatalogservice-5bf4567b87
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 5dbf478f-4362-44b0-a795-ba9d060ab6b4
    resourceVersion: "1087540"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/productcatalogservice-5bf4567b87
    uid: 1bb3de97-c88b-4a6a-a253-bba4b67f5382
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 5bf4567b87
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 5bf4567b87
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2020-06-12T09:53:53Z"
    generation: 2
    labels:
      app: productcatalogservice
      pod-template-hash: 6b759bd9d6
    name: productcatalogservice-6b759bd9d6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 5dbf478f-4362-44b0-a795-ba9d060ab6b4
    resourceVersion: "1086211"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/productcatalogservice-6b759bd9d6
    uid: 7309c5bc-406d-406c-a4df-21bba5251900
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 6b759bd9d6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 6b759bd9d6
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 50
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
      deployment.kubernetes.io/revision-history: 1,3,5
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 7
    labels:
      app: productcatalogservice
      pod-template-hash: 6c5f4649c8
    name: productcatalogservice-6c5f4649c8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 5dbf478f-4362-44b0-a795-ba9d060ab6b4
    resourceVersion: "1089523"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/productcatalogservice-6c5f4649c8
    uid: 38312ba6-b2b3-4107-93f8-8fa231a78849
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 6c5f4649c8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 6c5f4649c8
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:3550
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 7
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 597ff9794
    name: recommendationservice-597ff9794
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 873c9db5-0074-4428-89fc-870c540afbf2
    resourceVersion: "1087809"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/recommendationservice-597ff9794
    uid: cefd05a7-4fd2-4c19-891c-7383d690e413
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 597ff9794
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 597ff9794
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      deployment.kubernetes.io/revision-history: 2,4
    creationTimestamp: "2020-06-12T09:44:17Z"
    generation: 5
    labels:
      app: recommendationservice
      pod-template-hash: 67c48886d8
    name: recommendationservice-67c48886d8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 873c9db5-0074-4428-89fc-870c540afbf2
    resourceVersion: "3921876"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/recommendationservice-67c48886d8
    uid: f8b86b3e-711d-4a57-b2d1-311f36dbe595
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 67c48886d8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 67c48886d8
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 685cb857d
    name: recommendationservice-685cb857d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 873c9db5-0074-4428-89fc-870c540afbf2
    resourceVersion: "1084268"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/recommendationservice-685cb857d
    uid: 678e9b55-d740-4a4d-a03e-713d830c4d17
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 685cb857d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 685cb857d
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 6b4c5d747b
    name: recommendationservice-6b4c5d747b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 873c9db5-0074-4428-89fc-870c540afbf2
    resourceVersion: "1089548"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/recommendationservice-6b4c5d747b
    uid: dbab195c-07f7-44fb-a258-4fb87654cf2c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 6b4c5d747b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 6b4c5d747b
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:02:54Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 6bd5bb5c7d
    name: recommendationservice-6bd5bb5c7d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 873c9db5-0074-4428-89fc-870c540afbf2
    resourceVersion: "1088816"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/recommendationservice-6bd5bb5c7d
    uid: 574bff27-f654-4176-9c09-6620634baa63
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 6bd5bb5c7d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 6bd5bb5c7d
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2020-06-12T09:53:53Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 756bb476c8
    name: recommendationservice-756bb476c8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 873c9db5-0074-4428-89fc-870c540afbf2
    resourceVersion: "1086275"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/recommendationservice-756bb476c8
    uid: 1a49e381-6680-489d-ae17-db8cd5cb41cf
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 756bb476c8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 756bb476c8
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:8080
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 50
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 64455d5464
    name: redis-cart-64455d5464
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 0bded350-4a28-4416-a2c2-4966235edd9c
    resourceVersion: "1089464"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/redis-cart-64455d5464
    uid: eb98a8d9-a156-4cd8-a20c-bff4d34489b8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 64455d5464
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 64455d5464
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      deployment.kubernetes.io/revision-history: 2,4
    creationTimestamp: "2020-06-12T09:44:17Z"
    generation: 5
    labels:
      app: redis-cart
      pod-template-hash: 66f5677976
    name: redis-cart-66f5677976
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 0bded350-4a28-4416-a2c2-4966235edd9c
    resourceVersion: "1089454"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/redis-cart-66f5677976
    uid: 216293cb-238f-4cf9-8316-a85ae099b701
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 66f5677976
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 66f5677976
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      deployment.kubernetes.io/revision-history: "1"
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 4
    labels:
      app: redis-cart
      pod-template-hash: 77546cb8d
    name: redis-cart-77546cb8d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 0bded350-4a28-4416-a2c2-4966235edd9c
    resourceVersion: "1086247"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/redis-cart-77546cb8d
    uid: d40aa943-9d48-4fd6-8787-45bb9a2c2558
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 77546cb8d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 77546cb8d
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:02:54Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 7759484b88
    name: redis-cart-7759484b88
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 0bded350-4a28-4416-a2c2-4966235edd9c
    resourceVersion: "1088865"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/redis-cart-7759484b88
    uid: 14908442-c3c8-4bb7-9f9e-f3a9e778c232
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 7759484b88
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 7759484b88
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 25
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 25
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 7887db6db
    name: redis-cart-7887db6db
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 0bded350-4a28-4416-a2c2-4966235edd9c
    resourceVersion: "1087693"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/redis-cart-7887db6db
    uid: c93dc426-b0ca-424b-8de6-b8c2f8e80600
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 7887db6db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 7887db6db
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2020-06-12T10:10:54Z"
    generation: 2
    labels:
      app: shippingservice
      pod-template-hash: 768fdb9d
    name: shippingservice-768fdb9d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: 5c39f833-3a60-4adc-bba0-d1541ab0baf9
    resourceVersion: "1089483"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/shippingservice-768fdb9d
    uid: 9effdd0c-1b06-4744-8425-f6e1943636cd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 768fdb9d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 768fdb9d
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
          imagePullPolicy: IfNotPresent
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      deployment.kubernetes.io/revision-history: 2,4
    creationTimestamp: "2020-06-12T09:44:17Z"
    generation: 5
    labels:
      app: shippingservice
      pod-template-hash: 7dcb845f6b
    name: shippingservice-7dcb845f6b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: 5c39f833-3a60-4adc-bba0-d1541ab0baf9
    resourceVersion: "2690682"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/shippingservice-7dcb845f6b
    uid: 17a162ea-1d8c-40c7-bd47-36c05bac7fab
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 7dcb845f6b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 7dcb845f6b
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2020-06-12T10:02:54Z"
    generation: 2
    labels:
      app: shippingservice
      pod-template-hash: 85758c94c4
    name: shippingservice-85758c94c4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: 5c39f833-3a60-4adc-bba0-d1541ab0baf9
    resourceVersion: "1088846"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/shippingservice-85758c94c4
    uid: 2f8db89f-dcf3-491a-91f9-41bff7dd551d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 85758c94c4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 85758c94c4
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2020-06-12T09:59:27Z"
    generation: 2
    labels:
      app: shippingservice
      pod-template-hash: 85dbf46687
    name: shippingservice-85dbf46687
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: 5c39f833-3a60-4adc-bba0-d1541ab0baf9
    resourceVersion: "1087573"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/shippingservice-85dbf46687
    uid: 33fce073-3882-466a-892b-c201e6044c7b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 85dbf46687
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 85dbf46687
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      deployment.kubernetes.io/revision-history: "1"
    creationTimestamp: "2020-06-04T13:08:43Z"
    generation: 4
    labels:
      app: shippingservice
      pod-template-hash: 868c7cb5db
    name: shippingservice-868c7cb5db
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: 5c39f833-3a60-4adc-bba0-d1541ab0baf9
    resourceVersion: "1086229"
    selfLink: /apis/apps/v1/namespaces/default/replicasets/shippingservice-868c7cb5db
    uid: 9053918e-d785-48de-96e7-966b535e108e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 868c7cb5db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 868c7cb5db
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 4
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
